#!/bin/sh --
set -ue; export POSIXLY_CORRECT=1
# Made by jumps are op (jumpsareop@gmail.com)
# This software is under GPL version 3 and comes with ABSOLUTELY NO WARRANTY

alias pecho='printf %s\\n'
export NEOCITIES_API="${NEOCITIES_API:=https://neocities.org/api}"

# Because of how the internet works only the following is allowed:
# a-z A-Z 0-9 _ - .
# and a - in the start of the file isn't allowed.

main(){
	PRG=${0##*/}
	mkdir -p -- \
		"${SHCITIES_CONF:=${XDG_CONFIG_HOME:-${HOME:-.}/.config}/shcities}"

	while getopts c: OPT;do
		case $OPT in
			c)SHCITIES_CONF=$OPTARG;;
			*)dishelp;;
		esac
	done; shift $((OPTIND-1))

	[ $# = 0 ] && dishelp

	:<"$SHCITIES_CONF"
	[ "$1" != login ] && [ ! -f "$SHCITIES_CONF"/conf ] && {
		echo "First time?"; login
	}

	[ -f "$SHCITIES_CONF"/conf ] &&
		read -r apikey <"$SHCITIES_CONF"/conf
	export apikey

	case ${1-} in
		login)shift; login "$@";;
		push)shift; push "${@:-.}";;
		upload)shift; upload "$@";;
		delete)shift; delete "$@";;
		list)shift; list "$@";;
		info)info;;
		logout)rm -r -- "$SHCITIES_CONF";;
		*)dishelp;;
	esac
}

login(){
	[ ! "${1-}" ] && { printf "Site/User name: "; read -r user;}

	oldstty=$(stty -g) && trap 'stty "$oldstty"; exit' INT EXIT && stty -echo
	printf "Password: "
	read -r password
	[ "$oldstty" ] && stty "$oldstty" && trap - INT EXIT

	printf "\nAuthenticating..." >&2
	apikey=$(curl -Ss "https://$user:$password@neocities.org/api/key" |
		sed -n 's/"api_key": "\([^"]*\)"/\1/p')
	[ ! "$apikey" ] && { cat >&2 <<-EOF; exit;}

		Failed to authenticate (check username and password?)
	EOF

	printf "\rDone authenticating.\n"

	pecho "$apikey" >"$SHCITIES_CONF/conf"
	echo Done creating configuration.
}

push(){
	cachelist=$(list pale | grep '"path"\|"sha1_hash"')
	# Skip directories
	cachelist=$(while IFS=\" read -r _ _ _ path _;do
		[ -d "$path" ] && continue; pecho "$path"
	done <<-EOF
		$cachelist
	EOF
	)
	for dir;do (case $dir in [!/]*)dir=./$dir; esac; cd "$dir"
	find . -type f -print -exec sh -c '
	for file;do
		case $file in *[![:alnum:]_/.-]*)
			pecho "$file: Invalid file name" >&2; continue
		esac
		pecho "$file"
	done' -- '{}' + | while IFS= read -r file;do
		sum=$(sha1sum <"$file") sum=${sum%% *}
		printf %s "$cachelist" | while :;do
			IFS=\" read -r _ _ _ path _ || { upload "$file"; break;}
			IFS=\" read -r _ _ _ remotesum _
			[ "./$path" = "$file" ] && {
				[ "$remotesum" != "$sum" ] && upload "$file"
				break
			}
		done
	done);done
}

upload(){ for file;do
	:<"$file"
	[ -d "$file" ] && { pecho "$PRG: $file: Is a directory"; exit 1;}
	printf "\\r[K%s" "[1;33m[UPLOADING][m ${file:?}..."
	request upload -F "$file=@$file" | parseresult UPLOADED "$file"
done;}


delete(){ for file;do
	printf %s "[1;33m[DELETING][m ${file:?}..."
	request delete -d "filenames[]=$file" | parseresult DELETED "$file"
done;}

parseresult(){ sed -n '
	# Read everything
	:a; N; $!ba

	# Errors
	/"result": "error"/{
		s#.*"message": "\([^"]*\)".*#(\1)[K#
		s#^#[1;31m[FAILED][m '"${2:?}"' #p
		q
	}

	# Successes (is that how it is written?)
	/"result": "success"/{ i\
'"[1;32m[$1][m ${2:?}[K"'
		q
	}

	# Unknown
	i\
'"[1;33m[???][m ${2:?}[K"'
	q
';}

list(){ request list | { [ "${1-}" = pale ] && cat
	sed -n 's/^[[:space:]]*"path": "\(.*\)",*$/\1/p';};}

info(){ request info |
	sed '2,3d;s/,$//; s/ *[][{}] *$//; s/    //; /^$/d; s/"\([^"]*\)"/\1/g';}

request(){ curl -Ss -H"Authorization: Bearer ${apikey:?}" "$NEOCITIES_API/$@";}

dishelp(){ cat <<EOF; exit 1;}
shcities  Neocities CLI tool in POSIXâ„¢ shell
Copyright (C) 2023  Jumps are op (jumpsareop@gmail.com)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

USAGE: shcities [OPTIONS] COMMAND [ARGUMENTS]...

OPTIONS:
	-c CONFIG   Use CONFIG as the configuration file,
	            default ${XDG_CONFIG_HOME:-${HOME:-.}/.config}/shcities/conf,
	            or \$SHCITIES_CONF

COMMANDS:
	login [USER]           Login as USER, password will be read from stdin
	                       If USER isn't specified then it's read from stdin
	push [DIR]             Recursively upload a local directory to your site
	                       If DIR isn't specified then ./ is used
	upload FILE [FILE]...  Upload file(s) to your Neocities site
	delete FILE [FILE]...  Delete file(s) on your Neocities site
	list [pale]            List files from your Neocities site
	                       If "pale" is specified then plain JSON is printed
	info                   Get information and stats about your site
	logout                 Logout by clearing the local API key
EOF

main "$@"
